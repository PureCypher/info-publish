
services:
  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discord-announcer-bot
    # Use 'on-failure' with retry limit instead of 'unless-stopped' to prevent infinite restart loops
    restart: on-failure:5
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add memory limits to prevent resource exhaustion
      - MALLOC_TRIM_THRESHOLD_=131072
    networks:
      - bot-network
    # Resource limits to prevent memory leaks from consuming all system resources
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'
    # Simple health check
    healthcheck:
      test: ["CMD", "python", "-c", "import asyncio; import aiohttp; print('Bot is healthy')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Enhanced logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=discord-bot"
    # Add stop signal and grace period for proper shutdown
    stop_signal: SIGTERM
    stop_grace_period: 30s

  twitch-notifier:
    build:
      context: .
      dockerfile: Dockerfile.twitch
    container_name: twitch-stream-notifier
    # Use 'on-failure' with retry limit instead of 'unless-stopped' to prevent infinite restart loops
    restart: on-failure:5
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs:rw
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      # Add memory limits to prevent resource exhaustion
      - MALLOC_TRIM_THRESHOLD_=131072
    networks:
      - bot-network
    # Resource limits to prevent memory leaks from consuming all system resources
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 64M
          cpus: '0.05'
    # Simple health check for Twitch API connectivity
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    # Enhanced logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        labels: "service=twitch-notifier"
    # Add stop signal and grace period for proper shutdown
    stop_signal: SIGTERM
    stop_grace_period: 30s
    # Make sure the Discord bot starts first (optional dependency)
    depends_on:
      - discord-bot

networks:
  bot-network:
    driver: bridge